name: CI
on: [push, pull_request]
permissions:
  contents: read

jobs:
  mix_test:
    name: mix test (OTP ${{matrix.otp}} | Elixir ${{matrix.elixir}})

    env:
      MIX_ENV: test

    strategy:
      matrix:
        include:
          - elixir: 1.11.4
            otp: 22.3

          - elixir: 1.12.3
            otp: 23.3

          - elixir: 1.14.5
            otp: 25.3

          - elixir: 1.16.2
            otp: 26.2
            lint: true
            installer: true

    runs-on: ubuntu-20.04

    steps:
    - name: Checkout
      uses: actions/checkout@v4.1.7

    - name: Set up Elixir
      uses: erlef/setup-beam@v1
      with:
        elixir-version: ${{ matrix.elixir }}
        otp-version: ${{ matrix.otp }}

    - name: Restore deps and _build cache
      uses: actions/cache@v4
      with:
        path: |
          deps
          _build
        key: deps-${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-${{ hashFiles('**/mix.lock') }}
        restore-keys: |
          deps-${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}

    - name: Install dependencies
      run: mix deps.get --only test

    - name: Remove compiled application files
      run: mix clean

    - name: Compile & lint dependencies
      run: mix compile --warnings-as-errors
      if: ${{ matrix.lint }}

    - name: Run tests
      run: mix test

    - name: Run installer test
      run: |
        cd installer
        mix test
      if: ${{ matrix.installer }}

  npm_test:
    name: npm test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.7

      - name: Restore deps and _build cache
        uses: actions/cache@v4
        with:
          path: |
            deps
            _build
          key: deps-${{ runner.os }}-npm-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            deps-${{ runner.os }}-npm

      - name: Set up Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20.x

      - name: Restore npm cache
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: npm install and test
        run: |
          cd assets
          npm install
          npm test

  integration-test-elixir:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        include:
          # look for correct alpine image here: https://hub.docker.com/r/hexpm/elixir/tags
          - elixir: 1.14.5
            otp: 25.3.2.12
            suffix: "alpine-3.19.1"

          - elixir: 1.16.2
            otp: 26.2.5
            suffix: "alpine-3.19.1"

    container:
      image: hexpm/elixir:${{ matrix.elixir }}-erlang-${{ matrix.otp }}-${{ matrix.suffix }}
      env:
        ELIXIR_ASSERT_TIMEOUT: 10000
    services:
      postgres:
        image: postgres
        ports:
          - 5432:5432
        env:
          POSTGRES_PASSWORD: postgres
      mysql:
        image: mysql
        ports:
          - 3306:3306
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
      mssql:
        image: mcr.microsoft.com/mssql/server:2019-latest
        env:
          ACCEPT_EULA: Y
          SA_PASSWORD: some!Password
        ports:
          - 1433:1433
    steps:
      - uses: actions/checkout@v4.1.7
      - name: Run test script
        run: ./integration_test/test.sh
